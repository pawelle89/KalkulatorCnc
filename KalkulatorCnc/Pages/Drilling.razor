@page "/drilling"

@using KalkulatorCnc.Data
@using System.Timers
@using DataAccessLibrary
@using DataAccessLibrary.Models
@using KalkulatorCnc.Models
@inject IToolData _db

<h1>Wiercenie</h1>

<h4>Dodaj nowe narzędzie</h4>


<EditForm Model="@newTool" OnValidSubmit="@InsertTool">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputText class="form-control" id="ToolName" @bind-Value="newTool.ToolName" />
    <InputNumber class="form-control" id="Diamete" @bind-Value="newTool.Diameter" />
    <InputNumber class="form-control" id="CuttingSpeed" @bind-Value="newTool.CuttingSpeed" />
    <InputNumber class="form-control" id="SpindleSpee" @bind-Value="newTool.SpindleSpeed" />
    <InputNumber class="form-control" id="FeedPerRevolution" @bind-Value="newTool.FeedPerRevolution" />
    <InputNumber class="form-control" id="Feed" @bind-Value="newTool.Feed" />
    <button type="submit" class="btn btn-primary">Dodaj</button>
</EditForm>


<h4>Moje narzędzia</h4>


@if (tool is null)
            {
                <p><em>Loading...</em></p>
}
else
            {
<table class="table table-striped">
    <thead>
        <tr>
            <th>Nazwa</th>
            <th>Średnica</th>
            <th>Vcc</th>
            <th>Obroty</th>
            <th>Posuw na obrót</th>
            <th>Posuw</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var tools in tool)
                {
        <tr>
            <td>@tools.ToolName</td>
            <td>@tools.Diameter</td>
            <td>@tools.CuttingSpeed</td>
            <td>@tools.SpindleSpeed</td>
            <td>@tools.FeedPerRevolution</td>
            <td>@tools.Feed</td>
        </tr>
                }
    </tbody>
</table>
            }

@code {
    private List<ToolModel> tool;
    private DisplayToolModel newTool = new DisplayToolModel();

    protected override async Task OnInitializedAsync()
    {
        tool = await _db.GetTool();
    }
    private async Task InsertTool()
    {
        ToolModel t = new ToolModel
        {
            ToolName = newTool.ToolName,
            Diameter = newTool.Diameter,
            CuttingSpeed = newTool.CuttingSpeed,
            SpindleSpeed = newTool.SpindleSpeed,
            FeedPerRevolution = newTool.FeedPerRevolution,
            Feed = newTool.Feed
        };
       await _db.InsertTool(t);

       tool.Add(t);

       newTool = new DisplayToolModel();
    }
}
